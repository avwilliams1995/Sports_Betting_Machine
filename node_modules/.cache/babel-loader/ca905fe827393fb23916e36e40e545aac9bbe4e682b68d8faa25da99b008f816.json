{"ast":null,"code":"let result;\nconst fetchData = async (type, name, stat, date, statType, cache = {}) => {\n  let level = type.split(\" \")[0];\n  let item = type.split(\" \")[1];\n  console.log(\"------------------ in fetch\", name, stat, date, level);\n  const levelObj = {\n    NCAA: \"930\",\n    NBA: \"766\"\n  };\n  const API_KEY = \"b7a22a8a82c5effbfaf2aef4c1642cff905c8e0c4677860853d41512abaff014\";\n  const url = date !== \"live\" ? `https://apiv2.allsportsapi.com/basketball/?met=Fixtures&leagueId=${levelObj[level]}&APIkey=${API_KEY}&from=${date}&to=${date}` : `https://apiv2.allsportsapi.com/basketball/?met=Livescore&leagueId=${levelObj[level]}&APIkey=${API_KEY}`;\n  // if (cache[name][statType]) return cache[name][statType];\n  // if (cache[name][date]) return cache[name][date]\n  let found = false;\n  await fetch(url).then(response => response.json()).then(data => {\n    // cache[name] = {}\n    if (item === \"Player\") {\n      for (let game of data.result) {\n        for (let player of game.player_statistics.away_team) {\n          if (player.player === name) {\n            found = true;\n            // cache[name][statType] = player[stat]\n            result = player[stat];\n          }\n        }\n        for (let player of game.player_statistics.home_team) {\n          if (player.player === name) {\n            found = true;\n            // cache[name][statType] = player[stat]\n            result = player[stat];\n          }\n        }\n      }\n    } else if (item === \"Game\") {\n      for (let game of data.result) {\n        if (game.event_home_team === name) {\n          found = true;\n          // cache[name][date] = game.event_final_result\n          result = game.event_final_result;\n        } else if (game.event_away_team === name) {\n          found = true;\n          let arr = game.event_final_result.split(\" - \");\n          result = `${arr[1]} - ${arr[0]}`;\n          // cache[name][date] = result\n        }\n      }\n    }\n  });\n  console.log(cache);\n  return !found ? \"Could not find\" : result;\n};\nexport default fetchData;","map":{"version":3,"names":["result","fetchData","type","name","stat","date","statType","cache","level","split","item","console","log","levelObj","NCAA","NBA","API_KEY","url","found","fetch","then","response","json","data","game","player","player_statistics","away_team","home_team","event_home_team","event_final_result","event_away_team","arr"],"sources":["/Users/drewwilliams/bet_app/src/Fetch.js"],"sourcesContent":["let result;\n\nconst fetchData = async (type, name, stat, date, statType, cache = {}) => {\n  let level = type.split(\" \")[0];\n  let item = type.split(\" \")[1];\n\n  console.log(\"------------------ in fetch\", name, stat, date, level);\n  const levelObj = {\n    NCAA: \"930\",\n    NBA: \"766\",\n  };\n\n  const API_KEY =\n    \"b7a22a8a82c5effbfaf2aef4c1642cff905c8e0c4677860853d41512abaff014\";\n  const url =\n    date !== \"live\"\n      ? `https://apiv2.allsportsapi.com/basketball/?met=Fixtures&leagueId=${levelObj[level]}&APIkey=${API_KEY}&from=${date}&to=${date}`\n      : `https://apiv2.allsportsapi.com/basketball/?met=Livescore&leagueId=${levelObj[level]}&APIkey=${API_KEY}`;\n  // if (cache[name][statType]) return cache[name][statType];\n  // if (cache[name][date]) return cache[name][date]\n  let found = false;\n  await fetch(url)\n    .then((response) => response.json())\n    .then((data) => {\n      // cache[name] = {}\n      if (item === \"Player\") {\n        for (let game of data.result) {\n          for (let player of game.player_statistics.away_team) {\n            if (player.player === name) {\n              found = true;\n              // cache[name][statType] = player[stat]\n              result = player[stat];\n            }\n          }\n          for (let player of game.player_statistics.home_team) {\n            if (player.player === name) {\n              found = true;\n              // cache[name][statType] = player[stat]\n              result = player[stat];\n            }\n          }\n        }\n      } else if (item === \"Game\") {\n        for (let game of data.result) {\n          if (game.event_home_team === name) {\n            found = true;\n            // cache[name][date] = game.event_final_result\n            result = game.event_final_result;\n          } else if (game.event_away_team === name) {\n            found = true;\n            let arr = game.event_final_result.split(\" - \");\n            result = `${arr[1]} - ${arr[0]}`;\n            // cache[name][date] = result\n          }\n        }\n      }\n    });\n  console.log(cache);\n  return !found ? \"Could not find\" : result;\n};\n\nexport default fetchData;\n"],"mappings":"AAAA,IAAIA,MAAM;AAEV,MAAMC,SAAS,GAAG,MAAAA,CAAOC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,GAAG,CAAC,CAAC,KAAK;EACxE,IAAIC,KAAK,GAAGN,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAC9B,IAAIC,IAAI,GAAGR,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE7BE,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAET,IAAI,EAAEC,IAAI,EAAEC,IAAI,EAAEG,KAAK,CAAC;EACnE,MAAMK,QAAQ,GAAG;IACfC,IAAI,EAAE,KAAK;IACXC,GAAG,EAAE;EACP,CAAC;EAED,MAAMC,OAAO,GACX,kEAAkE;EACpE,MAAMC,GAAG,GACPZ,IAAI,KAAK,MAAM,GACV,oEAAmEQ,QAAQ,CAACL,KAAK,CAAE,WAAUQ,OAAQ,SAAQX,IAAK,OAAMA,IAAK,EAAC,GAC9H,qEAAoEQ,QAAQ,CAACL,KAAK,CAAE,WAAUQ,OAAQ,EAAC;EAC9G;EACA;EACA,IAAIE,KAAK,GAAG,KAAK;EACjB,MAAMC,KAAK,CAACF,GAAG,CAAC,CACbG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;IACd;IACA,IAAIb,IAAI,KAAK,QAAQ,EAAE;MACrB,KAAK,IAAIc,IAAI,IAAID,IAAI,CAACvB,MAAM,EAAE;QAC5B,KAAK,IAAIyB,MAAM,IAAID,IAAI,CAACE,iBAAiB,CAACC,SAAS,EAAE;UACnD,IAAIF,MAAM,CAACA,MAAM,KAAKtB,IAAI,EAAE;YAC1Be,KAAK,GAAG,IAAI;YACZ;YACAlB,MAAM,GAAGyB,MAAM,CAACrB,IAAI,CAAC;UACvB;QACF;QACA,KAAK,IAAIqB,MAAM,IAAID,IAAI,CAACE,iBAAiB,CAACE,SAAS,EAAE;UACnD,IAAIH,MAAM,CAACA,MAAM,KAAKtB,IAAI,EAAE;YAC1Be,KAAK,GAAG,IAAI;YACZ;YACAlB,MAAM,GAAGyB,MAAM,CAACrB,IAAI,CAAC;UACvB;QACF;MACF;IACF,CAAC,MAAM,IAAIM,IAAI,KAAK,MAAM,EAAE;MAC1B,KAAK,IAAIc,IAAI,IAAID,IAAI,CAACvB,MAAM,EAAE;QAC5B,IAAIwB,IAAI,CAACK,eAAe,KAAK1B,IAAI,EAAE;UACjCe,KAAK,GAAG,IAAI;UACZ;UACAlB,MAAM,GAAGwB,IAAI,CAACM,kBAAkB;QAClC,CAAC,MAAM,IAAIN,IAAI,CAACO,eAAe,KAAK5B,IAAI,EAAE;UACxCe,KAAK,GAAG,IAAI;UACZ,IAAIc,GAAG,GAAGR,IAAI,CAACM,kBAAkB,CAACrB,KAAK,CAAC,KAAK,CAAC;UAC9CT,MAAM,GAAI,GAAEgC,GAAG,CAAC,CAAC,CAAE,MAAKA,GAAG,CAAC,CAAC,CAAE,EAAC;UAChC;QACF;MACF;IACF;EACF,CAAC,CAAC;EACJrB,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAClB,OAAO,CAACW,KAAK,GAAG,gBAAgB,GAAGlB,MAAM;AAC3C,CAAC;AAED,eAAeC,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}