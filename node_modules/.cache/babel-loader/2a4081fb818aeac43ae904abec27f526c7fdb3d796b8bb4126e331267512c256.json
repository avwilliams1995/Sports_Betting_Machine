{"ast":null,"code":"var _jsxFileName = \"/Users/drewwilliams/bet_app/src/Profile.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const userInfo = useSelector(state => state.userInfo);\n  const [editBio, setEdit] = useState(false);\n  const username = useSelector(state => state.userInfo.username);\n  const handleBioEdit = async e => {\n    e.preventDefault();\n    let bio = e.target.value;\n    let body = JSON.stringify({\n      username: user,\n      bio\n    });\n    try {\n      const response = await fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch: ${response.statusText}`);\n      }\n      const user = response.json().then(data => {\n        store.dispatch(login(data));\n        store.dispatch(confirmedLogin(true));\n        console.log(\"---------user signed in \", data);\n        handleConfirmed();\n      });\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        children: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        children: userInfo.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        children: editBio ? /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleBioEdit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Edit bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 56\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 94\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setEdit(true),\n      children: \"Edit bio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"jQkT0Fkl8uXKHn2nP5LwhmQs5g0=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useSelector","React","useState","useNavigate","jsxDEV","_jsxDEV","Profile","_s","userInfo","state","editBio","setEdit","username","handleBioEdit","e","preventDefault","bio","target","value","body","JSON","stringify","user","response","fetch","method","headers","ok","Error","statusText","json","then","data","store","dispatch","login","confirmedLogin","console","log","handleConfirmed","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/drewwilliams/bet_app/src/Profile.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Profile = () => {\n  const userInfo = useSelector(state=> state.userInfo)\n  const [editBio, setEdit] = useState(false)\n  const username = useSelector(state=> state.userInfo.username)\n\n  const handleBioEdit = async(e) => {\n    e.preventDefault();\n    let bio = e.target.value;\n    let body = JSON.stringify({username:user,bio})\n    try {\n      const response = await fetch(\"http://localhost:3000/login\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body,\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch: ${response.statusText}`);\n      }\n      const user = response.json().then(data=>{\n        store.dispatch(login(data));\n        store.dispatch(confirmedLogin(true));\n        console.log(\"---------user signed in \", data);\n        handleConfirmed()\n      })\n      \n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  }\n  \n  return (\n    <div className=\"profile\"> \n    <div>\n      <a>{userInfo.username}</a>\n      <a>{userInfo.bio}</a>\n      <input>{editBio ? <form onSubmit={handleBioEdit}><input placeholder=\"Edit bio\"></input><button >Submit</button></form> : null}</input>\n    </div>\n      <button onClick={setEdit(true)}>Edit bio</button>\n    \n          \n    </div>\n  )\n}\n\nexport default Profile"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}