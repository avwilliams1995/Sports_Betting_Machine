{"ast":null,"code":"var _jsxFileName = \"/Users/drewwilliams/bet_app/src/Profile.js\",\n  _s = $RefreshSig$();\nimport { useSelector } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { editBio } from \"./Redux/userInfoReducer\";\nimport { store } from \"./Redux/store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const userInfo = useSelector(state => state.userInfo);\n  const [changeBio, setEdit] = useState(false);\n  const username = useSelector(state => state.userInfo.username);\n  const handleBioEdit = async e => {\n    e.preventDefault();\n    let bio = e.target.value;\n    let body = JSON.stringify({\n      username,\n      bio\n    });\n    try {\n      console.log('-----editing bio------');\n      const response = await fetch(\"http://localhost:3000/editBio\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch: ${response.statusText}`);\n      }\n      const user = response.json().then(data => {\n        store.dispatch(editBio(data.newBio));\n        console.log(\"User update \", data);\n        setEdit(false);\n      });\n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  };\n  console.log(userInfo);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: userInfo.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: userInfo.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), changeBio ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleBioEdit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Edit bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 98\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setEdit(true),\n      children: \"Edit bio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"3zfQuAT617M6BV8B210s2QEXzQY=\", false, function () {\n  return [useSelector, useSelector];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["useSelector","React","useState","editBio","store","jsxDEV","_jsxDEV","Profile","_s","userInfo","state","changeBio","setEdit","username","handleBioEdit","e","preventDefault","bio","target","value","body","JSON","stringify","console","log","response","fetch","method","headers","ok","Error","statusText","user","json","then","data","dispatch","newBio","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/drewwilliams/bet_app/src/Profile.js"],"sourcesContent":["import { useSelector } from \"react-redux\";\nimport React, { useState } from \"react\";\nimport { editBio } from \"./Redux/userInfoReducer\";\nimport { store } from \"./Redux/store\";\nconst Profile = () => {\n  const userInfo = useSelector(state=> state.userInfo)\n  const [changeBio, setEdit] = useState(false)\n  const username = useSelector(state=> state.userInfo.username)\n\n  const handleBioEdit = async(e) => {\n    e.preventDefault();\n    let bio = e.target.value;\n    let body = JSON.stringify({username, bio})\n    try {\n      console.log('-----editing bio------')\n      const response = await fetch(\"http://localhost:3000/editBio\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body,\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to fetch: ${response.statusText}`);\n      }\n      const user = response.json().then(data=>{\n        store.dispatch(editBio(data.newBio));\n        console.log(\"User update \", data);\n        setEdit(false)\n\n      })\n      \n    } catch (error) {\n      console.error(\"Error during fetch:\", error);\n    }\n  }\n  console.log(userInfo)\n  \n  return (\n    <div className=\"profile\"> \n    <div>\n      <p>{userInfo.username}</p>\n      <p>{userInfo.bio}</p>\n      {changeBio ? <form onSubmit={(e)=> handleBioEdit(e)}><input placeholder=\"Edit bio\"></input><button >Submit</button></form> : null}\n    </div>\n      <button onClick={() => setEdit(true)}>Edit bio</button>\n    \n          \n    </div>\n  )\n}\n\nexport default Profile"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}